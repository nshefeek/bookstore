services:
  cache:
    image: redis:latest
    ports:
      - "6379:6379"
    hostname: cache
    command: redis-server --appendonly yes
    volumes:
      - cache-data:/data
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
        max-file: "3"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 1s
      timeout: 3s
      retries: 30
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    hostname: db
    environment:
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
        max-file: "3"
    env_file:
      - .env.docker
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - ${DATABASE_USER}
      interval: 2s
      timeout: 3s
      retries: 40
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
    env_file:
      - .env.docker
    command: sh -c "alembic upgrade head && uvicorn bookstore.main:app --host 0.0.0.0 --port 8000 --reload"
volumes:
  db-data: {}
  cache-data: {}